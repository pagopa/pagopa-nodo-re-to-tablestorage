name: Deploy Azure function

on:
  workflow_call:
    inputs:
      environment:
        required: true
        description: The name of the environment where to deploy
        type: string
      target:
        required: true
        description: The environment target of the job
        type: string
      resource_group:
        required: true
        description: ...
        type: string
      app_name:
        required: true
        description: ...
        type: string
      registry_image:
        required: true
        description: ...
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-22.04
    if: ${{ inputs.target == inputs.environment }}
    environment:
      name: ${{ inputs.environment }}
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v3

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.CLIENT_ID }}
          tenant-id: ${{ secrets.TENANT_ID }}
          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}


  create_staging_slot:
    name: Init staging slots
    runs-on: ubuntu-22.04
    needs: [ setup ]
    environment:
      name: ${{ inputs.environment }}
    if: ${{ inputs.target == inputs.environment && inputs.target == 'prod' }}
    steps:
      - name: 'Azure CLI script: start staging slot'
        uses: azure/CLI@v1
        with:
          inlineScript: az functionapp start --name ${{ env.APP_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} --slot staging

      - name: 'Run Azure Functions Container Action: staging slot'
        uses: Azure/functions-container-action@v1.2.1
        if: ${{ needs.setup.outputs.environment == 'prod' }}
        with:
          app-name: ${{ env.APP_NAME }}
          image: ${{ env.REGISTRY_IMAGE }}
          slot-name: staging


  deploy:
    name: Deploy Azure Function
    runs-on: ubuntu-22.04
    needs: [ setup, create_staging_slot ]
    environment:
      name: ${{ inputs.environment }}
    if: ${{ inputs.target == inputs.environment }}
    steps:
      - name: 'Run Azure Functions Container Action'
        uses: Azure/functions-container-action@v1.2.1
        with:
          app-name: ${{ env.APP_NAME }}
          image: ${{ env.REGISTRY_IMAGE }}
          slot-name: production


  cleanup_staging_slot:
    name: Clean staging slots
    needs: [ setup, create_staging_slot, deploy ]
    if: ${{ success() || failure() && (inputs.target == inputs.environment && inputs.target == 'prod') }}
    runs-on: ubuntu-22.04
    environment: ${{ inputs.environment }}
    steps:
      - name: 'Azure CLI script: end staging slot'
        uses: azure/CLI@v1
        if: ${{ needs.setup.outputs.environment == 'prod' }}
        with:
          inlineScript: |
            az functionapp stop --name ${{ env.APP_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} --slot staging